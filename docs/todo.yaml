tasks:
  - setup_environment:
      - initialize vscode extension using generator-code ✅
      - setup Webview and React environment ✅
  - implement_core_ui:
      - create React component structure ✅
      - implement YAML visual preview ✅
      - setup YAML to JSON conversion using js-yaml ✅
      - implement YAML table view for better visualization ✅
  - interactive_editing:
      - develop forms/UI components for YAML editing ✅
      - implement two-way synchronization with YAML file ✅
      - implement buttons to switch between preview and edit modes ✅
      - implement context menu to open edit mode
  - visualization_modes:
      - implement JSON tree view ✅
      - implement table view for array data ✅
      - implement key-value table for object data ✅
      - add mode switching between JSON tree and Table view ✅
  - yaml_format_detection:
      - implement automatic format detection (Kubernetes, Docker, etc.) ✅
      - display format-specific icons and labels ✅
  - export_feature:
      - implement JSON export
      - implement Markdown export
      - implement HTML export
      - implement XML export (js2xmlparser)
      - implement PNG image export (canvas)
  - vscode_integration:
      - setup message passing between Webview and VSCode extension ✅
      - handle real-time update of YAML file ✅
      - integrate context menu in VSCode ✅
      - implement context menu options for preview (same window and side window)
      - implement auto-preview feature when opening YAML files based on user settings
  - testing:
      - write unit tests for React components
      - write integration tests for VSCode-Webview communication
  - documentation:
      - write README.md with setup and usage instructions ✅
      - provide sample YAML files for testing
      - add documentation for table view feature
